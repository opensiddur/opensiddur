<?xml version="1.0" encoding="UTF-8"?>
<TestSuite
  xmlns:tei="http://www.tei-c.org/ns/1.0"
  xmlns:tr="http://jewishliturgy.org/ns/tr/1.0">
    <suiteName>Transliteration transform</suiteName>
    <description>
        <p>Tests of transliteration transform</p>
        <author>Efraim Feinstein</author>
        <copyright>Copyright 2011-2013,2016 Efraim Feinstein
        Licensed under the GNU Lesser General Public License, version 3 or later</copyright>
    </description>
    <namespace prefix="tei">http://www.tei-c.org/ns/1.0</namespace>
    <namespace prefix="j">http://jewishliturgy.org/ns/jlptei/1.0</namespace>
    <namespace prefix="jf">http://jewishliturgy.org/ns/jlptei/flat/1.0</namespace>
    <namespace prefix="tr">http://jewishliturgy.org/ns/tr/1.0</namespace>
    <imports>
        import module namespace translit="http://jewishliturgy.org/transform/transliterator"
            at "/db/apps/opensiddur-server/transforms/translit/translit.xqm";
    </imports>
    <variable name="table" as="element(tr:table)">doc("/db/apps/opensiddur-tests/tests/transforms/translit/testtable.xml")//tr:table</variable>
    <TestSet ignore="yes">
      <testName>No table</testName>
      <test>
          <task>no transliteration table specified</task>
          <code>
            let $doc := doc("/db/apps/opensiddur-tests/tests/transforms/translit/no-translit-context.xml")
            return translit:transliterate-document($doc, map {})
          </code>
          <expected desc="acts as an identity transform" href="no-translit-context.xml"/>
      </test>
    </TestSet>
    <TestSet>
      <testName>transliterations</testName>
      <test>
          <task>one word transliteration</task>
          <code>
            translit:transliterate(element tei:w { attribute { "n" }{ "2" }, text { "אֶפְרָיִם" }} , map { "translit:table" : $table })
          </code>
          <expected desc="word is transliterated, element and attributes are preserved">
            <tei:w xmlns:tei="http://www.tei-c.org/ns/1.0" n="2">ʾefrayim</tei:w>
         </expected>
      </test>
      <test>
          <task>maleh vowel</task>
          <code>
            translit:transliterate(element tei:w { text { "רִית" }}, map { "translit:table" : $table })
          </code>
          <expected desc="word is transliterated">
            <tei:w xmlns:tei="http://www.tei-c.org/ns/1.0">riyt</tei:w>
         </expected>
      </test>
      <test>
          <task>holam male</task>
          <code><![CDATA[
            translit:transliterate(element tei:w { text{ "&#x05d6;&#x05d5;&#x05b9;" }}, map { "translit:table" : $table })
          ]]></code>
          <expected desc="word is transliterated">
            <tei:w xmlns:tei="http://www.tei-c.org/ns/1.0">zo</tei:w>
         </expected>
      </test>
      <test>
          <task>shuruq</task>
          <code><![CDATA[
            translit:transliterate(element tei:w { text { "&#x05d6;&#x05d5;&#x05bc;" }}, map { "translit:table" : $table })
          ]]></code>
          <expected desc="word is transliterated">
            <tei:w xmlns:tei="http://www.tei-c.org/ns/1.0">zu</tei:w>
         </expected>
      </test>
      <test>
          <task>dagesh hazak</task>
          <code><![CDATA[
            translit:transliterate(element tei:w { text { "לַבַּל" }}, map { "translit:table" : $table })
          ]]></code>
          <expected desc="word is transliterated">
            <tei:w xmlns:tei="http://www.tei-c.org/ns/1.0">labbal</tei:w>
         </expected>
      </test>
      <test>
          <task>dagesh kal</task>
          <code><![CDATA[
            translit:transliterate(element tei:w { text { "בַּז" }}, map { "translit:table" : $table })
          ]]></code>
          <expected desc="word is transliterated">
            <tei:w xmlns:tei="http://www.tei-c.org/ns/1.0">baz</tei:w>
         </expected>
      </test>
      <test>
          <task>Tetragrammaton 1</task>
          <code><![CDATA[
            translit:transliterate(element tei:w { text { "יְהוָה" }}, map { "translit:table" : $table })
          ]]></code>
          <expected desc="replaced">
            <tei:w xmlns:tei="http://www.tei-c.org/ns/1.0">ʾadonay</tei:w>
         </expected>
      </test>
      <test>
          <task>Tetragrammaton 2</task>
          <code><![CDATA[
            translit:transliterate(element tei:w { text { "יֱהוִה" }}, map { "translit:table" : $table })
          ]]></code>
          <expected desc="replaced">
            <tei:w xmlns:tei="http://www.tei-c.org/ns/1.0">ʾelohim</tei:w>
         </expected>
      </test>
      <test>
          <task>Tetragrammaton 3</task>
          <code><![CDATA[
            translit:transliterate(element tei:w { text { "יְיָ" }}, map { "translit:table" : $table })
          ]]></code>
          <expected desc="replaced">
            <tei:w>ʾadonay</tei:w>
         </expected>
      </test>
    </TestSet>
    <TestSet>
      <testName>Regression tests</testName>
      <test>
          <task>pass 0</task>
          <code><![CDATA[
            translit:pass0(<tr:w><tr:cc><tr:cons>ר</tr:cons><tr:vs>ִ</tr:vs></tr:cc><tr:cc><tr:cons>י</tr:cons></tr:cc><tr:cc><tr:cons>ת</tr:cons></tr:cc></tr:w>)
          ]]></code>
          <expected desc="pass0 marks first and last correctly">
              <tr:w><tr:cc first="1"><tr:cons>ר</tr:cons><tr:vs>ִ</tr:vs></tr:cc><tr:cc><tr:cons>י</tr:cons></tr:cc><tr:cc last="1"><tr:cons>ת</tr:cons></tr:cc></tr:w>
          </expected>
      </test>
      <test>
        <task>Shin+dot+vowel</task>
        <code><![CDATA[
          translit:transliterate(element tei:w { text { "&#x05e9;&#x05c1;&#x05b8;" } }, map { "translit:table" : $table })
        ]]></code>
        <expected desc="shin + vowel">
          <tei:w>sha</tei:w>
        </expected>
      </test>
      <test>
        <task>Shin+dot+dagesh+vowel+consonant</task>
        <code><![CDATA[
          translit:transliterate( element tei:w { text { "&#x05e9;&#x05c1;&#x05bc;&#x05b8;&#x05d1;" }}, map { "translit:table" : $table })
        ]]></code>
        <expected desc="shin + vowel + consonant">
          <tei:w>shav</tei:w>
        </expected>
      </test>
      <test>
        <task>Shin+dot+dagesh+vowel</task>
        <code><![CDATA[
          translit:transliterate(element tei:w { text { "&#x05e9;&#x05c1;&#x05bc;&#x05b8;" } }, map { "translit:table" : $table })
        ]]></code>
        <expected desc="shin once + vowel (no doubling)">
          <tei:w>sha</tei:w>
        </expected>
      </test>
      <test>
        <task>vav-holam haser for vav</task>
        <code><![CDATA[
          translit:transliterate(element tei:w { text { "&#x05de;&#x05b4;&#x05e6;&#x05b0;&#x05d5;&#x05ba;&#x05ea;" }}, map { "translit:table" : $table })
        ]]></code>
        <expected desc="transliterates as a vav">
          <tei:w>mitzvot</tei:w>
        </expected>
      </test>
      <test>
        <task>Unicode combined forms</task>
        <code><![CDATA[
            translit:transliterate(element tei:w { text { "&#xfb2f;&#xfb31;&#xfb4b;" }}, map { "translit:table" : $table })
        ]]></code>
        <expected desc="transliterates the same way as the decomposed form would">
            <tei:w>ʾabbo</tei:w>
        </expected>
      </test>
    </TestSet>
    <TestSet ignore="yes">
      <testName>with specified transliteration table and default alignment...</testName>
      <test>
        <task>j:segGen</task>
        <xslt/>
        <context href="translit-segGen-context.xml"/>
        <expected desc="j:segGen is replaced by a tei:seg transliterated text"
                   href="translit-segGen-expect.xml"/>
      </test>
      <test>
        <task>tei:seg</task>
        <xslt/>
        <context href="translit-seg-context.xml"/>
        <expected desc="tei:seg is replaced by j:parallelGrp including j:parallel[@type='transliteration']"
                   href="translit-seg-expect.xml"/>
      </test>
      <test>
        <task>pre-existing j:parallelGrp</task>
        <xslt/>
        <context href="translit-parallelGrp-context.xml"/>
        <expected desc="j:parallel[@type='transliteration'] is added to the existing j:parallelGrp"
                   href="translit-parallelGrp-expect.xml"/>
      </test>
    </TestSet>
    <TestSet>
      <testName>Unit test: translit:make-word-text()</testName>
      <test>
        <task>consonants only</task>
        <code>
          element ccs {
            translit:make-word-text(text { "&#x5d0;&#x5d1;" }, map {})
          }
        </code>
        <expected desc="tr:cc/tr:cons">
          <ccs>
            <tr:cc>
              <tr:cons>&#x05d0;</tr:cons>
            </tr:cc>
            <tr:cc>
              <tr:cons>&#x05d1;</tr:cons>
            </tr:cc>
          </ccs>
        </expected>
      </test>
      <test>
        <task>consonants+vowels</task>
        <code>
          element ccs {
            translit:make-word-text(text { "&#x5d0;&#x05b0;&#x5d1;&#x05b1;&#x05d2;&#x05b7;&#x05d3;&#x05b8;" }, map {})
          }
        </code>
        <expected desc="tr:cc/(tr:cons, tr:s|tr:vu|tr:vs|tr:vl)">
          <ccs>
            <tr:cc>
              <tr:cons>&#x05d0;</tr:cons>
              <tr:s>&#x05b0;</tr:s>
            </tr:cc>
            <tr:cc>
              <tr:cons>&#x05d1;</tr:cons>
              <tr:vu>&#x05b1;</tr:vu>
            </tr:cc>
            <tr:cc>
              <tr:cons>&#x05d2;</tr:cons>
              <tr:vs>&#x05b7;</tr:vs>
            </tr:cc>
            <tr:cc>
              <tr:cons>&#x05d3;</tr:cons>
              <tr:vl>&#x05b8;</tr:vl>
            </tr:cc>
          </ccs>
        </expected>
      </test>
      <test>
        <task>consonant+dagesh+vowel</task>
        <code>
          element ccs {
            translit:make-word-text(text { "&#x5d1;&#x05bc;&#x5b8;" }, map {})
          }
        </code>
        <expected desc="tr:cc/(tr:cons, tr:d, tr:vl)">
          <ccs>
            <tr:cc>
              <tr:cons>&#x05d1;</tr:cons>
              <tr:d>&#x05bc;</tr:d>
              <tr:vl>&#x05b8;</tr:vl>
            </tr:cc>
          </ccs>
        </expected>
      </test>
      <test>
        <task>shin+dot+dagesh+vowel</task>
        <code>
          element ccs {
            translit:make-word-text(text { "&#x5e9;&#x05c1;&#x05bc;&#x5b8;" }, map {})
          }
        </code>
        <expected desc="tr:cc/(tr:cons, tr:dot, tr:d, tr:vl)">
          <ccs>
            <tr:cc>
              <tr:cons>&#x05e9;</tr:cons>
              <tr:dot>&#x05c1;</tr:dot>
              <tr:d>&#x05bc;</tr:d>
              <tr:vl>&#x05b8;</tr:vl>
            </tr:cc>
          </ccs>
        </expected>
      </test>
      <test>
        <task>shin+dot+rafe+vowel</task>
        <code>
          element ccs {
            translit:make-word-text(text { "&#x5e9;&#x05c1;&#x05bf;&#x5b8;" }, map {})
          }
        </code>
        <expected desc="tr:cc/(tr:cons, tr:dot, tr:d, tr:vl)">
          <ccs>
            <tr:cc>
              <tr:cons>&#x05e9;</tr:cons>
              <tr:dot>&#x05c1;</tr:dot>
              <tr:d>&#x05bf;</tr:d>
              <tr:vl>&#x05b8;</tr:vl>
            </tr:cc>
          </ccs>
        </expected>
      </test>
      <test>
        <task>combine everything: shin+dot+dagesh+vowel+meteg+lower accent</task>
        <code>
          element ccs {
            translit:make-word-text(text { "&#x5e9;&#x05c1;&#x05bc;&#x5b8;&#x05bd;&#x05a5;" }, map {})
          }
        </code>
        <expected desc="tr:cc/*">
          <ccs>
            <tr:cc>
              <tr:cons>&#x05e9;</tr:cons>
              <tr:dot>&#x05c1;</tr:dot>
              <tr:d>&#x05bc;</tr:d>
              <tr:vl>&#x05b8;</tr:vl>
              <tr:m>&#x05bd;</tr:m>
              <tr:al>&#x05a5;</tr:al>
            </tr:cc>
          </ccs>
        </expected>
      </test>
      <test>
        <task>combine everything: shin+dot+dagesh+vowel+meteg+mid accent</task>
        <code>
          element ccs {
            translit:make-word-text(text { "&#x5e9;&#x05c1;&#x05bc;&#x5b8;&#x05bd;&#x05ad;" }, map {})
          }
        </code>
        <expected desc="tr:cc/*">
          <ccs>
            <tr:cc>
              <tr:cons>&#x05e9;</tr:cons>
              <tr:dot>&#x05c1;</tr:dot>
              <tr:d>&#x05bc;</tr:d>
              <tr:vl>&#x05b8;</tr:vl>
              <tr:m>&#x05bd;</tr:m>
              <tr:am>&#x05ad;</tr:am>
            </tr:cc>
          </ccs>
        </expected>
      </test>
      <test>
        <task>combine everything: shin+dot+dagesh+vowel+meteg+upper accent</task>
        <code>
          element ccs {
            translit:make-word-text(text { "&#x5e9;&#x05c1;&#x05bc;&#x5b8;&#x05bd;&#x05a8;" }, map {})
          }
        </code>
        <expected desc="tr:cc/*">
          <ccs>
            <tr:cc>
              <tr:cons>&#x05e9;</tr:cons>
              <tr:dot>&#x05c1;</tr:dot>
              <tr:d>&#x05bc;</tr:d>
              <tr:vl>&#x05b8;</tr:vl>
              <tr:m>&#x05bd;</tr:m>
              <tr:ah>&#x05a8;</tr:ah>
            </tr:cc>
          </ccs>
        </expected>
      </test>
    </TestSet>
    <TestSet ignore="yes">
      <testName>with specified transliteration table and alignment at paragraphs...</testName>
      <test>
        <task>tei:p and tei:seg</task>
        <xslt/>
        <context href="translit-p-context.xml"/>
        <expected desc="tei:p is replaced by j:parallelGrp including j:parallel[@type='transliteration']"
                   href="translit-p-expect.xml"/>
      </test>
      <test>
        <task>tei:p and pre-existing j:parallelGrp</task>
        <xslt/>
        <context href="translit-p-parallelGrp-context.xml"/>
        <expected desc="j:parallel[@type='transliteration'] is added to the existing j:parallelGrp"
                   href="translit-p-parallelGrp-expect.xml"/>
      </test>
    </TestSet>
</TestSuite>
